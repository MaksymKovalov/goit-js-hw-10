{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Imports\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Elements\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\n// Variables\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n// Flatpickr options\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (!selectedDate) {\n      return;\n    }\n\n    console.log('Selected date:', selectedDate);\n\n    // Check if selected date is in the future\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        titleColor: '#fff',\n        messageColor: '#fff',\n        iconColor: '#fff',\n        progressBarColor: '#fff',\n        close: false,\n        closeOnEscape: true,\n        closeOnClick: true,\n        timeout: 4000,\n      });\n      startButton.disabled = true;\n      userSelectedDate = null;\n      return;\n    }\n\n    // Valid date selected\n    userSelectedDate = selectedDate;\n    startButton.disabled = false;\n\n    console.log('Valid date selected:', userSelectedDate);\n  },\n};\n\n// Initialize flatpickr - ВАЖЛИВО: ініціалізувати після завантаження DOM\ndocument.addEventListener('DOMContentLoaded', () => {\n  flatpickr(dateTimePicker, options);\n});\n\n// Start button click handler\nstartButton.addEventListener('click', startCountdown);\n\nfunction startCountdown() {\n  if (!userSelectedDate) {\n    console.log('No date selected');\n    return;\n  }\n\n  console.log('Starting countdown to:', userSelectedDate);\n\n  // Disable controls\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  // Start countdown\n  countdownInterval = setInterval(() => {\n    const now = new Date().getTime();\n    const targetTime = userSelectedDate.getTime();\n    const timeDifference = targetTime - now;\n\n    console.log('Time difference:', timeDifference);\n\n    if (timeDifference <= 0) {\n      // Countdown finished\n      clearInterval(countdownInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n\n      // Re-enable input for next countdown\n      dateTimePicker.disabled = false;\n      userSelectedDate = null;\n\n      iziToast.info({\n        title: 'Finished',\n        message: 'Countdown has ended!',\n        position: 'topRight',\n      });\n\n      console.log('Countdown finished');\n      return;\n    }\n\n    // Calculate and display remaining time\n    const timeComponents = convertMs(timeDifference);\n    updateTimerDisplay(timeComponents);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\n// Initial timer display\nupdateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n\n// iziToast configuration\niziToast.settings({\n  timeout: 4000,\n  resetOnHover: true,\n  transitionIn: 'flipInX',\n  transitionOut: 'flipOutX',\n});\n"],"names":["dateTimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","startCountdown","now","timeDifference","updateTimerDisplay","timeComponents","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"2GAOA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAG9D,IAAIC,EAAmB,KACnBC,EAAoB,KAGxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEpC,GAAKC,EAOL,IAHA,QAAQ,IAAI,iBAAkBA,CAAY,EAGtCA,GAAgB,IAAI,KAAQ,CAC9BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,WAAY,OACZ,aAAc,OACd,UAAW,OACX,iBAAkB,OAClB,MAAO,GACP,cAAe,GACf,aAAc,GACd,QAAS,GACjB,CAAO,EACDV,EAAY,SAAW,GACvBK,EAAmB,KACnB,MACN,CAGIA,EAAmBI,EACnBT,EAAY,SAAW,GAEvB,QAAQ,IAAI,uBAAwBK,CAAgB,EACxD,CACA,EAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDM,EAAUZ,EAAgBQ,CAAO,CACnC,CAAC,EAGDP,EAAY,iBAAiB,QAASY,CAAc,EAEpD,SAASA,GAAiB,CACxB,GAAI,CAACP,EAAkB,CACrB,QAAQ,IAAI,kBAAkB,EAC9B,MACJ,CAEE,QAAQ,IAAI,yBAA0BA,CAAgB,EAGtDL,EAAY,SAAW,GACvBD,EAAe,SAAW,GAG1BO,EAAoB,YAAY,IAAM,CACpC,MAAMO,EAAM,IAAI,KAAI,EAAG,QAAO,EAExBC,EADaT,EAAiB,QAAO,EACPQ,EAIpC,GAFA,QAAQ,IAAI,mBAAoBC,CAAc,EAE1CA,GAAkB,EAAG,CAEvB,cAAcR,CAAiB,EAC/BS,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAGhEhB,EAAe,SAAW,GAC1BM,EAAmB,KAEnBK,EAAS,KAAK,CACZ,MAAO,WACP,QAAS,uBACT,SAAU,UAClB,CAAO,EAED,QAAQ,IAAI,oBAAoB,EAChC,MACN,CAGI,MAAMM,EAAiBC,EAAUH,CAAc,EAC/CC,EAAmBC,CAAc,CACrC,EAAK,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAmB,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DrB,EAAY,YAAcsB,EAAeJ,CAAI,EAC7CjB,EAAa,YAAcqB,EAAeH,CAAK,EAC/CjB,EAAe,YAAcoB,EAAeF,CAAO,EACnDjB,EAAe,YAAcmB,EAAeD,CAAO,CACrD,CAGAP,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAGhEL,EAAS,SAAS,CAChB,QAAS,IACT,aAAc,GACd,aAAc,UACd,cAAe,UACjB,CAAC"}